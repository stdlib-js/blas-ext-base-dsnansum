// Copyright (c) 2022 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
var e,r;e=this,r=function(){"use strict";var e="function"==typeof Object.defineProperty?Object.defineProperty:null,r=Object.defineProperty,t=Object.prototype,n=t.toString,o=t.__defineGetter__,i=t.__defineSetter__,u=t.__lookupGetter__,a=t.__lookupSetter__,f=function(){try{return e({},"x",{}),!0}catch(e){return!1}}()?r:function(e,r,f){var l,c,_,p;if("object"!=typeof e||null===e||"[object Array]"===n.call(e))throw new TypeError("invalid argument. First argument must be an object. Value: `"+e+"`.");if("object"!=typeof f||null===f||"[object Array]"===n.call(f))throw new TypeError("invalid argument. Property descriptor must be an object. Value: `"+f+"`.");if((c="value"in f)&&(u.call(e,r)||a.call(e,r)?(l=e.__proto__,e.__proto__=t,delete e[r],e[r]=f.value,e.__proto__=l):e[r]=f.value),_="get"in f,p="set"in f,c&&(_||p))throw new Error("invalid argument. Cannot specify one or more accessors and a value or writable attribute in the property descriptor.");return _&&o&&o.call(e,r,f.get),p&&i&&i.call(e,r,f.set),e};function l(e,r,t){f(e,r,{configurable:!1,enumerable:!1,writable:!1,value:t})}function c(e){return e!=e}var _=Math.floor;function p(e,r,t,n){var o,i,u,a,f,l,d,s,y,b,v,m,j;if(e<=0)return 0;if(1===e||0===t)return c(r[n])?0:r[n];if(o=n,e<8){for(v=0,j=0;j<e;j++)!1===c(r[o])&&(v+=r[o]),o+=t;return v}if(e<=128){for(i=c(r[o])?0:r[o],u=c(r[o+=t])?0:r[o],a=c(r[o+=t])?0:r[o],f=c(r[o+=t])?0:r[o],l=c(r[o+=t])?0:r[o],d=c(r[o+=t])?0:r[o],s=c(r[o+=t])?0:r[o],y=c(r[o+=t])?0:r[o],o+=t,b=e%8,j=8;j<e-b;j+=8)i+=c(r[o])?0:r[o],u+=c(r[o+=t])?0:r[o],a+=c(r[o+=t])?0:r[o],f+=c(r[o+=t])?0:r[o],l+=c(r[o+=t])?0:r[o],d+=c(r[o+=t])?0:r[o],s+=c(r[o+=t])?0:r[o],y+=c(r[o+=t])?0:r[o],o+=t;for(v=i+u+(a+f)+(l+d+(s+y));j<e;j++)!1===c(r[o])&&(v+=r[o]),o+=t;return v}return m=_(e/2),p(m-=m%8,r,t,o)+p(e-m,r,t,o+m*t)}function d(e,r,t){var n,o,i;if(e<=0)return 0;if(1===e||0===t)return c(r[0])?0:r[0];if(n=t<0?(1-e)*t:0,e<8){for(o=0,i=0;i<e;i++)!1===c(r[n])&&(o+=r[n]),n+=t;return o}return p(e,r,t,n)}function s(e,r,t){return d(e,r,t)}return l(d,"ndarray",p),l(s,"ndarray",(function(e,r,t,n){return p(e,r,t,n)})),s},"object"==typeof exports&&"undefined"!=typeof module?module.exports=r():"function"==typeof define&&define.amd?define(r):(e="undefined"!=typeof globalThis?globalThis:e||self).dsnansum=r();
//# sourceMappingURL=browser.js.map
